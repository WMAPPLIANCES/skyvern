# A generic, single database configuration.

[alembic]
# path to migration scripts
# This is the name of the directory where your migration scripts (versions) are stored.
# O padrão e o que o Skyvern parece usar é "alembic".
script_location = alembic

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# A configuração do Skyvern usa um formato com data/hora.
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
# '.' significa que o diretório atual (onde alembic.ini está) será adicionado ao sys.path,
# o que ajuda o env.py a importar módulos da sua aplicação.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library.
# Skyvern usa UTC.
timezone = UTC

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; This defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path.
# The path separator used here should be the separator specified by "version_path_separator" below.
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions

# version path separator; As mentioned above, this is the character used to split
# version_locations. The default within new alembic.ini files is "os", which uses os.pathsep.
version_path_separator = os

# set to 'true' to search source files recursively
# in each "version_locations" directory
# new in Alembic version 1.10
# recursive_version_locations = false

# the output encoding used when revision files
# are written from script.py.mako
output_encoding = utf-8

# sqlalchemy.url = driver://user:pass@localhost/dbname
# Esta linha é a configuração padrão da URL do banco de dados para o Alembic.
# No entanto, nosso env.py modificado priorizará a variável de ambiente DATABASE_STRING.
# Você pode deixar esta linha comentada ou definir um valor de fallback genérico.
# Se o env.py não conseguir encontrar DATABASE_STRING, ele tentará usar esta.
# Exemplo de fallback (não será usado se DATABASE_STRING estiver definida):
# sqlalchemy.url = postgresql+psycopg://user:password@db_host:5432/default_db
# Para o Skyvern, o original era:
sqlalchemy.url = postgresql+psycopg://skyvern@localhost/skyvern


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# Exemplo de hooks para formatadores (descomente e ajuste se necessário)
# format using "black"
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# lint with attempts to fix using "ruff"
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff # Ajuste o caminho se necessário
# ruff.options = --fix REVISION_SCRIPT_FILENAME


# Logging configuration - Esta seção parece padrão e correta.
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
